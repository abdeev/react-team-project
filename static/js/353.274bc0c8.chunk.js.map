{"version":3,"file":"static/js/353.274bc0c8.chunk.js","mappings":"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","sources":["redux/statistics/selectorsStatistics.js","webpack://react-homework-template/./src/components/Statistics/StatisticsDiagram/StatisticsDiagram.module.css?9dd0","components/Statistics/StatisticsDiagram/StatisticsDiagram.jsx","constans/monthArray.js","webpack://react-homework-template/./src/components/Statistics/StatisticsForm/StatisticsForm.module.css?8138","components/Statistics/StatisticsForm/StatisticsForm.jsx","webpack://react-homework-template/./src/components/Statistics/StatisticsTable/StatisticsTable.module.css?6dbc","components/Statistics/StatisticsTable/StatisticsTable.jsx","webpack://react-homework-template/./src/components/Statistics/StatisticsDiagramAndTable.module.css?e6ba","components/Statistics/StatisticsDiagramAndTable.jsx","utils/getYearsFromTransaction.js","webpack://react-homework-template/./src/pages/StatisticsPage/StatisticsPage.module.css?7bef","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["export const selectCategoriesSummary = state =>\n  state.statistics.statisticsTransactions.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.statistics.statisticsTransactions.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.statistics.statisticsTransactions.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.statistics.statisticsTransactions.periodTotal;\nexport const selectIsLoading = state => state.statistics.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"diagram_container\":\"StatisticsDiagram_diagram_container__5AaYO\",\"diagram_text\":\"StatisticsDiagram_diagram_text__2boqF\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectPeriodTotal } from 'redux/statistics/selectorsStatistics';\n\nimport s from '../StatisticsDiagram/StatisticsDiagram.module.css';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst donutOptions = {\n  cutout: '70%',\n  plugins: {\n    legend: {\n      display: false,\n    },\n  },\n};\n\nexport const StatisticsDiagram = ({ diagram }) => {\n  const periodTotal = useSelector(selectPeriodTotal);\n\n  return (\n    <div className={s.diagram_container}>\n      <p className={s.diagram_text}> â‚´ {periodTotal}</p>\n      <div className={s.diagram_box}>\n        <Doughnut options={donutOptions} data={diagram} />\n      </div>\n    </div>\n  );\n};\n\nStatisticsDiagram.propTypes = {\n  diagram: PropTypes.shape({\n    labels: PropTypes.arrayOf(PropTypes.string),\n    datasets: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string,\n        data: PropTypes.arrayOf(PropTypes.number),\n        backgroundColor: PropTypes.arrayOf(PropTypes.string),\n        borderWidth: PropTypes.number,\n      })\n    ),\n  }),\n};\n","export const monthArray = [\n  { value: '01', label: 'January' },\n  { value: '02', label: 'February' },\n  { value: '03', label: 'March' },\n  { value: '04', label: 'April' },\n  { value: '05', label: 'May' },\n  { value: '06', label: 'June' },\n  { value: '07', label: 'July' },\n  { value: '08', label: 'August' },\n  { value: '09', label: 'September' },\n  { value: '10', label: 'October' },\n  { value: '11', label: 'November' },\n  { value: '12', label: 'December' },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"stats_form\":\"StatisticsForm_stats_form__zk9oG\",\"select-container\":\"StatisticsForm_select-container__JplRG\"};","import { useEffect, useState } from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport { monthArray } from 'constans/monthArray';\nimport { getStatisticsUserThunk } from 'redux/statistics/thunkStatictics';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport s from '../StatisticsForm/StatisticsForm.module.css';\n\nexport const StatisticsForm = ({ years }) => {\n  const [electMonth, setElectMonth] = useState('');\n  const [electYear, setElectYear] = useState('');\n\n  const dispach = useDispatch();\n\n  useEffect(() => {\n    if (!electMonth.length && !electYear.length) return;\n    dispach(getStatisticsUserThunk({ electMonth, electYear }));\n  }, [electMonth, electYear, dispach]);\n\n  return (\n    <form className={s.stats_form} action=\"submit\">\n      <div classmonth={s.select__block}>\n        <CreatableSelect\n          classNamePrefix=\"statistics-select\"\n          name=\"month\"\n          defaultInputValue={electMonth}\n          options={monthArray}\n          placeholder=\"Month\"\n          captureMenuScroll\n          onChange={e => setElectMonth(e.value)}\n        />\n      </div>\n      <div classmonth={s.select__block}>\n        <CreatableSelect\n          classNamePrefix=\"statistics-select\"\n          name=\"years\"\n          defaultInputValue={electYear}\n          options={years}\n          placeholder=\"Years\"\n          captureMenuScroll\n          onChange={e => setElectYear(e.value)}\n        />\n      </div>\n    </form>\n  );\n};\n\nStatisticsForm.propTypes = {\n  years: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Table\":\"StatisticsTable_Table__bFXHp\",\"table__th__left\":\"StatisticsTable_table__th__left__NsM9g\",\"table__th__right\":\"StatisticsTable_table__th__right__pC+Jt\",\"table__head\":\"StatisticsTable_table__head__falKK\",\"table__tr\":\"StatisticsTable_table__tr__x89ML\",\"table__td__right\":\"StatisticsTable_table__td__right__opMzp\",\"table__container\":\"StatisticsTable_table__container__uARwy\",\"table__chategory\":\"StatisticsTable_table__chategory__Us2dc\",\"table__tr__summary\":\"StatisticsTable_table__tr__summary__m2mwn\",\"table__td__summary\":\"StatisticsTable_table__td__summary__I8O3H\",\"table__red__value\":\"StatisticsTable_table__red__value__kwSKd\",\"table__green__value\":\"StatisticsTable_table__green__value__CL1lg\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectIsLoading,\n} from 'redux/statistics/selectorsStatistics';\nimport { nanoid } from 'nanoid';\nimport { Puff } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nimport s from '../StatisticsTable/StatisticsTable.module.css';\n\nexport const StatisticsTable = ({ tableData }) => {\n  const expenseSummary = useSelector(selectExpenseSummary);\n  const incomeSummary = useSelector(selectIncomeSummary);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <table className={s.Table}>\n      <tbody>\n        <tr className={s.table__head}>\n          <th className={s.table__th__left}>Category</th>\n          <th className={s.table__th__right}>Sum</th>\n        </tr>\n        {tableData.map(el => {\n          return (\n            <tr className={s.table__tr} key={nanoid()}>\n              <td className={s.table__container}>\n                {isLoading ? (\n                  <Puff\n                    type=\"Puff\"\n                    color={el.backgroundColor}\n                    height={25}\n                    width={25}\n                    timeout={3000}\n                  />\n                ) : (\n                  <div\n                    style={{\n                      backgroundColor: el.backgroundColor,\n                      width: 25,\n                      height: 25,\n                    }}\n                  />\n                )}\n\n                <div className={s.table__chategory}>{el.name}</div>\n              </td>\n              <td className={s.table__td__right}>{el.total}</td>\n            </tr>\n          );\n        })}\n        <tr className={s.table__tr__summary}>\n          <td className={s.table__td__summary}>Expenses:</td>\n          <td className={s.table__red__value}>{expenseSummary}</td>\n        </tr>\n        <tr className={s.table__tr__summary}>\n          <td className={s.table__td__summary}>Income:</td>\n          <td className={s.table__green__value}>{incomeSummary}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nStatisticsTable.propTypes = {\n  tableData: PropTypes.arrayOf(\n    PropTypes.shape({\n      categoriesSummary: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          type: PropTypes.string,\n          total: PropTypes.number,\n        })\n      ),\n      incomeSummary: PropTypes.number,\n      expenseSummary: PropTypes.number,\n      periodTotal: PropTypes.number,\n      year: PropTypes.number,\n      month: PropTypes.number,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"statistics__block__form\":\"StatisticsDiagramAndTable_statistics__block__form__2BYRb\",\"statistics__block\":\"StatisticsDiagramAndTable_statistics__block__XvRsN\",\"statistics_warning_text\":\"StatisticsDiagramAndTable_statistics_warning_text__kqgih\"};","import { StatisticsDiagram } from 'components/Statistics/StatisticsDiagram/StatisticsDiagram';\nimport { StatisticsForm } from 'components/Statistics/StatisticsForm/StatisticsForm';\nimport { StatisticsTable } from 'components/Statistics/StatisticsTable/StatisticsTable';\nimport { useEffect, useState } from 'react';\nimport { convertDataForChart } from '../../utils/convertDataForChart';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectCategoriesSummary,\n  selectIsLoading,\n} from 'redux/statistics/selectorsStatistics';\n\nimport s from './StatisticsDiagramAndTable.module.css';\nimport { Puff } from 'react-loader-spinner';\nimport { selectTransactions } from 'redux/transactions/selectorsTransactions';\nimport { getYearsFromTransaction } from 'utils/getYearsFromTransaction';\n\nexport const StatisticsDiagramAndTable = () => {\n  const [diagramData, setDiagramData] = useState(null);\n  const [tableData, setTableData] = useState(null);\n  const [yearsArray, setYearsArray] = useState(null);\n\n  const categoriesSummary = useSelector(selectCategoriesSummary);\n  const isLoading = useSelector(selectIsLoading);\n  const transactions = useSelector(selectTransactions);\n\n  useEffect(() => {\n    if (!categoriesSummary.length) {\n      setDiagramData(null);\n      setTableData([]);\n    }\n    if (categoriesSummary.length) {\n      const data = convertDataForChart(categoriesSummary);\n      setDiagramData(data.diagram);\n      setTableData(data.table);\n    }\n  }, [categoriesSummary]);\n\n  useEffect(() => {\n    if (transactions.length) {\n      const years = getYearsFromTransaction(transactions);\n      setYearsArray(years);\n    }\n  }, [transactions]);\n\n  return (\n    <div className={s.statistics__block}>\n      <div>\n        {isLoading ? (\n          <Puff\n            type=\"Puff\"\n            color=\"var(--icon-active-color)\"\n            height={300}\n            width={300}\n            timeout={3000}\n          />\n        ) : diagramData ? (\n          <StatisticsDiagram diagram={diagramData} />\n        ) : (\n          <h2 className={s.statistics_warning_text}>\n            There is no information for this term !\n          </h2>\n        )}\n      </div>\n      <div className={s.statistics__block__form}>\n        {yearsArray && <StatisticsForm years={yearsArray} />}\n\n        {tableData && <StatisticsTable tableData={tableData} />}\n      </div>\n    </div>\n  );\n};\n","export const getYearsFromTransaction = transactions => {\n  const yearsArray = transactions.reduce((acc, el) => {\n    const year = el.transactionDate.split('-')[0];\n    const isInclude = acc.filter(el => el.value === year);\n    if (!isInclude.length) {\n      acc.push({ value: year, label: year });\n      return acc;\n    }\n    return acc;\n  }, []);\n\n  return yearsArray.sort((a, b) => a.value - b.value);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"statistics__title\":\"StatisticsPage_statistics__title__f0enk\"};","import { StatisticsDiagramAndTable } from 'components/Statistics/StatisticsDiagramAndTable';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getStatisticsUserThunk } from 'redux/statistics/thunkStatictics';\n\nimport s from '../StatisticsPage/StatisticsPage.module.css';\nconst StatisticsPage = () => {\n  const dispach = useDispatch();\n\n  useEffect(() => {\n    dispach(getStatisticsUserThunk());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className={s.statistics__container}>\n      <h1 className={s.statistics__title}>Statistics</h1>\n      <StatisticsDiagramAndTable />\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["selectCategoriesSummary","state","statistics","statisticsTransactions","categoriesSummary","selectIncomeSummary","incomeSummary","selectExpenseSummary","expenseSummary","selectPeriodTotal","periodTotal","selectIsLoading","isLoading","ChartJS","ArcElement","Tooltip","Legend","donutOptions","cutout","plugins","legend","display","StatisticsDiagram","diagram","useSelector","className","s","options","data","monthArray","value","label","StatisticsForm","years","useState","electMonth","setElectMonth","electYear","setElectYear","dispach","useDispatch","useEffect","length","getStatisticsUserThunk","action","classmonth","classNamePrefix","name","defaultInputValue","placeholder","captureMenuScroll","onChange","e","StatisticsTable","tableData","map","el","type","color","backgroundColor","height","width","timeout","style","total","nanoid","StatisticsDiagramAndTable","diagramData","setDiagramData","setTableData","yearsArray","setYearsArray","transactions","selectTransactions","convertDataForChart","table","reduce","acc","year","transactionDate","split","isInclude","filter","push","sort","a","b","getYearsFromTransaction"],"sourceRoot":""}